name: Deploy to Google App Engine

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Instalar dependencias
      run: npm ci
      
    - name: Ejecutar tests (si los hay)
      run: |
        if [ -f "package.json" ] && grep -q '"test"' package.json; then
          npm test
        else
          echo "No se encontraron tests configurados"
        fi
      
    - name: Autenticar con Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        
    - name: Configurar Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        
    - name: Verificar estructura del proyecto
      run: |
        echo "📁 Estructura del proyecto:"
        ls -la
        echo "📋 package.json existe:" $(test -f package.json && echo "✅" || echo "❌")
        echo "🖥️ server.js existe:" $(test -f server.js && echo "✅" || echo "❌")
        
    - name: Crear app.yaml simplificado
      run: |
        cat > app.yaml << EOF
        runtime: nodejs20
        service: default

        env_variables:
          NODE_ENV: production
          PORT: 8080
          GMAIL_USER: "${{ secrets.GMAIL_USER }}"
          GMAIL_PASS: "${{ secrets.GMAIL_PASS }}"
          DB_HOST: "${{ secrets.DB_HOST }}"
          DB_PORT: "${{ secrets.DB_PORT }}"
          DB_USER: "${{ secrets.DB_USER }}"
          DB_PASSWORD: "${{ secrets.DB_PASSWORD }}"
          DB_NAME: "${{ secrets.DB_NAME }}"
          SESSION_SECRET: "${{ secrets.SESSION_SECRET }}"
          ALLOWED_ORIGINS: "${{ secrets.ALLOWED_ORIGINS }}"

        automatic_scaling:
          target_cpu_utilization: 0.65
          min_instances: 1
          max_instances: 3

        resources:
          cpu: 1
          memory_gb: 0.5

        handlers:
          - url: /.*
            script: auto
            secure: always
        EOF
        
    - name: Debug del app.yaml generado
      run: |
        echo "📄 Contenido completo de app.yaml:"
        cat app.yaml
        echo ""
        echo "🔍 Verificando sintaxis YAML..."
        python3 -c "import yaml; yaml.safe_load(open('app.yaml'))" && echo "✅ YAML válido" || echo "❌ YAML inválido"
        
    - name: Verificar configuración de GCP
      run: |
        echo "🔍 Verificando configuración de Google Cloud..."
        gcloud config list
        gcloud app describe || echo "⚠️ App Engine no inicializado"
        
    - name: Inicializar App Engine si es necesario
      run: |
        if ! gcloud app describe --quiet 2>/dev/null; then
          echo "🚀 Inicializando App Engine..."
          gcloud app create --region=us-central1 --quiet
        else
          echo "✅ App Engine ya está inicializado"
        fi
        
    - name: Deploy a App Engine
      run: |
        echo "🚀 Iniciando deployment..."
        gcloud app deploy app.yaml \
          --quiet \
          --verbosity=info \
          --stop-previous-version \
          --promote
        
    - name: Verificar deployment
      run: |
        echo "✅ Deployment completado!"
        echo "🌐 URL disponible en Google Cloud Console"
        gcloud app browse --no-launch-browser